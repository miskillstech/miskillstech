server {
	listen 80;
	server_name www.miskillstech.com;
        rewrite ^(.*) http://miskillstech.com$1 permanent;
}
server {
        listen 80 default_server;
        server_name miskillstech.com;
        root /ms/miskillstech.com/code/runenvs/website/;
        index index.php index.html index.htm;
        client_max_body_size 1000M;
        include /dev/shm/nginx.*.conf;
        location / {
			location ~ \.php$    # This will match any thing ending in .php
            {
				# What does ~ mean?
				# ~ is saying that it is case sensitive regex
				# ref: http://nginx.org/en/docs/http/ngx_http_core_module.html#location


				# Why are fastcgi params needed?
				# Any time that a proxy connection is made, the original request must be translated to ensure that the proxied request makes sense to the backend server.
				# Since we are changing protocols with a FastCGI pass, this involves some additional work.
				# While http-to-http proxying mainly involves augmenting http headers to ensure that the backend has the information it needs to respond to the proxy server on behalf of the client,
				# FastCGI is a separate protocol that cannot read http headers. Due to this consideration, any pertinent information must be passed to the backend through other means.
				# The primary method of passing extra information when using the FastCGI protocol is with parameters. The background server should be configured to read and process these,
				# modifying its behavior depending on what it finds. Nginx can set FastCGI parameters using the fastcgi_param directive.
				# ref: https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx

				fastcgi_split_path_info ^(.+\.php)(/.+)$;
						try_files $uri =404;

				fastcgi_pass emr_php7docker_1:84;

				# why is request_filename being used?
				# Since I am using alias.  
				# ref: http://serverfault.com/questions/465607/nginx-document-rootfastcgi-script-name-vs-request-filename
				fastcgi_param SCRIPT_FILENAME $request_filename;
						fastcgi_index index.php;
						include fastcgi_params;

				# The flush cache script was causing a timeout. So increased this to 5 minutes
				#ref:https://www.tekovic.com/fixing-timeout-between-nginx-and-php-fpm
				fastcgi_read_timeout 300;


						# Q) Why is the following modification done to REQUEST_URI?
				# REQUEST_URI has the name of the script that needs to be executed.
				# Since the word api comes from the location we need to remove the word api before sending the name of the script to fastcgi.
				# VK tried removing this on 13th dec 2015 but than the /api/ requests url are not found
				set $laravel_uri $request_uri;
						if ($laravel_uri ~ api(/?.*)$) {
						   set $laravel_uri $1;
						}
				fastcgi_param REQUEST_URI $laravel_uri;
				#end request_uri modification section

				fastcgi_param LARA_ENV local; # Environment variable for Laravel
							#fastcgi_param HTTPS on;
				fastcgi_param QUERY_STRING $original_query_string;
			}
        }
}
server {
        listen 80;
        server_name www.hillclick.in;
        rewrite ^(.*) http://hillclick.in$1 permanent;
}
server {
        listen 80;
        server_name hillclick.in;
        root /ms/miskillstech.com/code/runenvs/hillclick.in/;
        index index.php index.html index.htm;
        client_max_body_size 1000M;
        location / {
                try_files $uri $uri/ /index.php?$query_string;
        }
		location /v1 {
			resolver 127.0.0.11 valid=30s;
			set $upstream_nginx nginxproxy_server_1;

			# If I add a / at the end of proxy_pass then all the urls are just sent to /
			# but if I was not using a variable name and it was
			# proxy_pass http://nginxproxy_server_1/ then it works fine.
			proxy_pass http://$upstream_nginx; 
		}
}